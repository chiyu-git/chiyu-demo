<template>
    <div class="ui-datepicker-wrapper">
        <!-- 头部区，选择上或者下 -->
        <div class="ui-datepicker-header">
            <a href="#" class="ui-datepicker-btn ui-datepicker-prev-btn" on-click="prevMonth">&lt;</a>
            <!-- 当前月份 -->
            <span class="ui-datepicker-curr-month">{{year}}-{{month}}</span>
            <a href="#" class="ui-datepicker-btn ui-datepicker-next-btn" on-click="nextMonth">&gt;</a>
        </div>
        <!-- body区，显示日历 -->
        <div class="ui-datepicker-body">
            <table>
                <!-- 日历顶端显示星期几 -->
                <thead>
                    <tr>
                        <th>一</th><th>二</th><th>三</th><th>四</th>
                        <th>五</th><th>六</th><th>日</th>
                    </tr>
                </thead>
                <!-- 日历主体部分，每一行显示七天 -->
                <tbody>
                    <tr s-for='week in dates'>
                        <td s-for='date in week'
                            class='{{date.type}}'
                            on-click="pickDate(date)">{{date.day}}</td>
                    </tr>
                </tbody>
            </table>
        </div>
        
        <p>选择的日期：{{picked}}</p>
    </div>
</template>

<script>
import getCalendar from './data'



export default {
  initData(){
    // 生成今天的日历
    const date = new Date(),
          year = date.getFullYear(),
          month = date.getMonth() + 1;

    const initDates = getCalendar(year,month);
    return{
      date,
      year,
      month,
      dates:initDates,
      picked:''
    }
  },
  // 日历的渲染
  updateCalendar(date,year,month){
    this.data.set('date', date);
    this.data.set('year', year);
    this.data.set('month', month);
    const newDates = getCalendar(year,month);
    this.data.set('dates', newDates);
  },
  prevMonth() {
    const {year,month} = this.data.get(),
          // 获取上个月的最后一天
          prevMonthLastDate = new Date(year,month-1,0),
          prevMonthYear = prevMonthLastDate.getFullYear(),
          prevMonth = prevMonthLastDate.getMonth() + 1;

    this.updateCalendar(prevMonthLastDate,prevMonthYear,prevMonth);
  },
  nextMonth() {
    const {year,month} = this.data.get(),
          // 获取下个月的第一天
          nextMonthFirstDate = new Date(year,month,1),
          nextMonthYear = nextMonthFirstDate.getFullYear(),
          nextMonth = nextMonthFirstDate.getMonth() + 1

    this.updateCalendar(nextMonthFirstDate,nextMonthYear,nextMonth);
  },
  // 日期选择
  pickDate(date){
    const {year,month,day} = date;
    this.data.set('picked',new Date(year,month-1,day));
  }
}
</script>

<style lang="less" rel="stylesheet/less">
.ui-datepicker-wrapper {
    width: 240px;
    font-size: 16px;
    color: #666666;
    box-shadow: 2px 2px 8px 2px rgba(128, 128, 128, 0.3);
        .ui-datepicker-header {
            padding: 0 5px;
            height: 50px;
            line-height: 50px;
            text-align: center;
            background: #f0f0f0;
            border-bottom: 1px solid #cccccc;
            font-weight: bold;
            .ui-datepicker-btn {
                    font-family: serif;
                    font-size: 20px;
                    width: 20px;
                    height: 50px;
                    line-height: 50px;
                    color: #368ce8;
                    text-align: center;
                    cursor: pointer;
                    text-decoration: none;
            }
            .ui-datepicker-prev-btn {
                float: left;
            }
            .ui-datepicker-next-btn {
                float: right;
            }
        }
        .ui-datepicker-body>table {
                width: 100%;
                border-collapse: collapse;
                th {
                    line-height: 40px;
                    text-align: center;
                    font-size: 12px;
                }
                td {
                    line-height: 30px;
                    text-align: center;
                    border: 1px solid #f0f0f0;
                    font-size: 10px;
                    width: 14%;
                    cursor: pointer;
                }
                td:hover{
                    color:white;
                    background: #368ce8;
                }
                .prev,.next{
                    background:#c0c0c0;
                }
        }
}
</style>
